package fxKanta.test;
// Generated by ComTest BEGIN
import java.util.Map;
import java.util.HashMap;
import javafx.collections.ObservableList;
import kanta.VaihtoehtoAttribuutti;
import static org.junit.Assert.*;
import org.junit.*;
import fxKanta.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2024.02.21 14:43:20 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class RajausSuodatinTest {



  // Generated by ComTest BEGIN
  /** testRajausSuodatin29 */
  @Test
  public void testRajausSuodatin29() {    // RajausSuodatin: 29
    Map<Integer, String> map = new HashMap<Integer, String>(); 
    map.put(new Integer(0), new String("tosi vähän")); 
    map.put(new Integer(1), new String("vähän")); 
    map.put(new Integer(2), new String("keskimääräisesti")); 
    map.put(new Integer(3), new String("paljon")); 
    map.put(new Integer(4), new String("tosi paljon")); 
    VaihtoehtoAttribuutti attribuutti = new VaihtoehtoAttribuutti("määrä", map, -1, "ei valittu"); 
    RajausSuodatin suodatin = new RajausSuodatin(attribuutti); 
    assertEquals("From: RajausSuodatin line: 42", "ei valittu|ei valittu", suodatin.toString()); 
    suodatin.setMinimi(2); 
    suodatin.setMaksimi(3); 
    assertEquals("From: RajausSuodatin line: 46", "keskimääräisesti|paljon", suodatin.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetMinimiVaihtoehdot65 */
  @Test
  public void testGetMinimiVaihtoehdot65() {    // RajausSuodatin: 65
    Map<Integer, String> map = new HashMap<Integer, String>(); 
    map.put(new Integer(0), new String("tosi vähän")); 
    map.put(new Integer(1), new String("vähän")); 
    map.put(new Integer(2), new String("keskimääräisesti")); 
    map.put(new Integer(3), new String("paljon")); 
    map.put(new Integer(4), new String("tosi paljon")); 
    VaihtoehtoAttribuutti attribuutti = new VaihtoehtoAttribuutti("määrä", map, -1, "ei valittu"); 
    RajausSuodatin suodatin = new RajausSuodatin(attribuutti); 
    assertEquals("From: RajausSuodatin line: 74", "ei valittu\ntosi vähän\nvähän\nkeskimääräisesti\npaljon\ntosi paljon\n", suodatin.getMinimiVaihtoehdot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetMinimiVaihtoehdotList88 */
  @Test
  public void testGetMinimiVaihtoehdotList88() {    // RajausSuodatin: 88
    Map<Integer, String> map = new HashMap<Integer, String>(); 
    map.put(new Integer(0), new String("tosi vähän")); 
    map.put(new Integer(1), new String("vähän")); 
    map.put(new Integer(2), new String("keskimääräisesti")); 
    map.put(new Integer(3), new String("paljon")); 
    map.put(new Integer(4), new String("tosi paljon")); 
    VaihtoehtoAttribuutti attribuutti = new VaihtoehtoAttribuutti("määrä", map, -1, "ei valittu"); 
    RajausSuodatin suodatin = new RajausSuodatin(attribuutti); 
    ObservableList<VaihtoehtoAttribuutti> lista = suodatin.getMinimiVaihtoehdotList(); 
    assertEquals("From: RajausSuodatin line: 99", "ei valittu", lista.get(0).toString()); 
    assertEquals("From: RajausSuodatin line: 100", "tosi vähän", lista.get(1).toString()); 
    assertEquals("From: RajausSuodatin line: 101", "vähän", lista.get(2).toString()); 
    assertEquals("From: RajausSuodatin line: 102", "keskimääräisesti", lista.get(3).toString()); 
    assertEquals("From: RajausSuodatin line: 103", "paljon", lista.get(4).toString()); 
    assertEquals("From: RajausSuodatin line: 104", "tosi paljon", lista.get(5).toString()); 
    suodatin.setMinimi(3); 
    lista = suodatin.getMinimiVaihtoehdotList(); 
    assertEquals("From: RajausSuodatin line: 108", "ei valittu", lista.get(0).toString()); 
    assertEquals("From: RajausSuodatin line: 109", "tosi vähän", lista.get(1).toString()); 
    assertEquals("From: RajausSuodatin line: 110", "vähän", lista.get(2).toString()); 
    assertEquals("From: RajausSuodatin line: 111", "keskimääräisesti", lista.get(3).toString()); 
    assertEquals("From: RajausSuodatin line: 112", "paljon", lista.get(4).toString()); 
    assertEquals("From: RajausSuodatin line: 113", "tosi paljon", lista.get(5).toString()); 
    suodatin.setMaksimi(3); 
    lista = suodatin.getMinimiVaihtoehdotList(); 
    assertEquals("From: RajausSuodatin line: 117", "ei valittu", lista.get(0).toString()); 
    assertEquals("From: RajausSuodatin line: 118", "tosi vähän", lista.get(1).toString()); 
    assertEquals("From: RajausSuodatin line: 119", "vähän", lista.get(2).toString()); 
    assertEquals("From: RajausSuodatin line: 120", "keskimääräisesti", lista.get(3).toString()); 
    assertEquals("From: RajausSuodatin line: 121", "paljon", lista.get(4).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetMaksimiVaihtoehdotList145 */
  @Test
  public void testGetMaksimiVaihtoehdotList145() {    // RajausSuodatin: 145
    Map<Integer, String> map = new HashMap<Integer, String>(); 
    map.put(new Integer(0), new String("tosi vähän")); 
    map.put(new Integer(1), new String("vähän")); 
    map.put(new Integer(2), new String("keskimääräisesti")); 
    map.put(new Integer(3), new String("paljon")); 
    map.put(new Integer(4), new String("tosi paljon")); 
    VaihtoehtoAttribuutti attribuutti = new VaihtoehtoAttribuutti("määrä", map, -1, "ei valittu"); 
    RajausSuodatin suodatin = new RajausSuodatin(attribuutti); 
    ObservableList<VaihtoehtoAttribuutti> lista = suodatin.getMaksimiVaihtoehdotList(); 
    assertEquals("From: RajausSuodatin line: 156", "ei valittu", lista.get(0).toString()); 
    assertEquals("From: RajausSuodatin line: 157", "tosi vähän", lista.get(1).toString()); 
    assertEquals("From: RajausSuodatin line: 158", "vähän", lista.get(2).toString()); 
    assertEquals("From: RajausSuodatin line: 159", "keskimääräisesti", lista.get(3).toString()); 
    assertEquals("From: RajausSuodatin line: 160", "paljon", lista.get(4).toString()); 
    assertEquals("From: RajausSuodatin line: 161", "tosi paljon", lista.get(5).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString277 */
  @Test
  public void testToString277() {    // RajausSuodatin: 277
    Map<Integer, String> map = new HashMap<Integer, String>(); 
    map.put(new Integer(0), new String("tosi vähän")); 
    map.put(new Integer(1), new String("vähän")); 
    map.put(new Integer(2), new String("keskimääräisesti")); 
    map.put(new Integer(3), new String("paljon")); 
    map.put(new Integer(4), new String("tosi paljon")); 
    VaihtoehtoAttribuutti attribuutti = new VaihtoehtoAttribuutti("määrä", map, -1, "ei valittu"); 
    RajausSuodatin suodatin = new RajausSuodatin(attribuutti); 
    assertEquals("From: RajausSuodatin line: 286", "ei valittu|ei valittu", suodatin.toString()); 
    suodatin.setMinimi(2); 
    suodatin.setMaksimi(3); 
    assertEquals("From: RajausSuodatin line: 290", "keskimääräisesti|paljon", suodatin.toString()); 
  } // Generated by ComTest END
}