package reseptihaku.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import reseptihaku.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2024.02.21 14:41:02 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class OhjeTest {



  // Generated by ComTest BEGIN
  /** testOhje21 */
  @Test
  public void testOhje21() {    // Ohje: 21
    Ohje muropohja = new Ohje(); 
    assertEquals("From: Ohje line: 23", "1|", muropohja.toString()); 
    muropohja.setOhjeistus("Lisää vehnäjauhot"); 
    assertEquals("From: Ohje line: 26", "1|Lisää vehnäjauhot", muropohja.toString()); 
    muropohja.setOhjeistus(null); 
    assertEquals("From: Ohje line: 29", "1|Lisää vehnäjauhot", muropohja.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetOhjeistus61 */
  @Test
  public void testSetOhjeistus61() {    // Ohje: 61
    Ohje muropohja = new Ohje(); 
    assertEquals("From: Ohje line: 63", "1|", muropohja.toString()); 
    muropohja.setOhjeistus("Lisää vehnäjauhot"); 
    assertEquals("From: Ohje line: 66", "1|Lisää vehnäjauhot", muropohja.toString()); 
    muropohja.setOhjeistus(null); 
    assertEquals("From: Ohje line: 69", "1|Lisää vehnäjauhot", muropohja.toString()); 
    muropohja.setOhjeistus(""); 
    assertEquals("From: Ohje line: 72", "1|", muropohja.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetOhjeistus87 */
  @Test
  public void testGetOhjeistus87() {    // Ohje: 87
    Ohje muropohja = new Ohje(); 
    assertEquals("From: Ohje line: 89", "", muropohja.getOhjeistus()); 
    muropohja.setOhjeistus("Lisää vehnäjauhot"); 
    assertEquals("From: Ohje line: 92", "Lisää vehnäjauhot", muropohja.getOhjeistus()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetVaihe118 */
  @Test
  public void testSetVaihe118() {    // Ohje: 118
    Ohje ohje = new Ohje(); 
    assertEquals("From: Ohje line: 120", 1, ohje.getVaihe()); 
    ohje.setVaihe(10); 
    assertEquals("From: Ohje line: 123", 10, ohje.getVaihe()); 
    ohje.setVaihe(-5); 
    assertEquals("From: Ohje line: 126", 10, ohje.getVaihe()); 
    ohje.setVaihe(0); 
    assertEquals("From: Ohje line: 129", 10, ohje.getVaihe()); 
    ohje.setVaihe(1); 
    assertEquals("From: Ohje line: 132", 1, ohje.getVaihe()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse146 */
  @Test
  public void testParse146() {    // Ohje: 146
    Ohje ohje = new Ohje(); 
    ohje.parse("1|1|Lisää mansikat"); 
    assertEquals("From: Ohje line: 149", "1|Lisää mansikat", ohje.toString()); 
    ohje = new Ohje(); 
    ohje.parse(null); 
    assertEquals("From: Ohje line: 153", "1|", ohje.toString()); 
    ohje = new Ohje(); 
    ohje.parse("Lisää mansikat|1"); 
    assertEquals("From: Ohje line: 157", "1|", ohje.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testClone177 */
  @Test
  public void testClone177() {    // Ohje: 177
    Ohje muropohja = new Ohje("Sekoita sokeri ja jauhot", 2); 
    Ohje muropohjaKopio = muropohja.clone(); 
    assertEquals("From: Ohje line: 181", true, muropohja.getVaihe() == muropohjaKopio.getVaihe()); 
    assertEquals("From: Ohje line: 182", true, muropohja.getOhjeistus().equals(muropohjaKopio.getOhjeistus())); 
    assertEquals("From: Ohje line: 183", true, muropohja.equals(muropohjaKopio)); 
    muropohja.setOhjeistus("Lisää sokeri"); 
    assertEquals("From: Ohje line: 186", false, muropohja.getOhjeistus().equals(muropohjaKopio.getOhjeistus())); 
    assertEquals("From: Ohje line: 187", false, muropohja.equals(muropohjaKopio)); 
    muropohja.setVaihe(1); 
    assertEquals("From: Ohje line: 190", false, muropohja.getVaihe() == muropohjaKopio.getVaihe()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals205 */
  @Test
  public void testEquals205() {    // Ohje: 205
    Ohje ohje1 = new Ohje(); 
    Ohje ohje2 = new Ohje(); 
    assertEquals("From: Ohje line: 208", true, ohje1.equals(ohje2)); 
    assertEquals("From: Ohje line: 209", true, ohje2.equals(ohje1)); 
    ohje1.setOhjeistus("Vatkaa kananmunat"); 
    assertEquals("From: Ohje line: 212", false, ohje1.equals(ohje2)); 
    assertEquals("From: Ohje line: 213", false, ohje2.equals(ohje1)); 
    ohje2.setOhjeistus("Vatkaa kananmunat"); 
    assertEquals("From: Ohje line: 216", true, ohje1.equals(ohje2)); 
    assertEquals("From: Ohje line: 217", true, ohje2.equals(ohje1)); 
    ohje2.setVaihe(12); 
    assertEquals("From: Ohje line: 220", false, ohje1.equals(ohje2)); 
    assertEquals("From: Ohje line: 221", false, ohje2.equals(ohje1)); 
    ohje1.setVaihe(11); 
    assertEquals("From: Ohje line: 224", false, ohje1.equals(ohje2)); 
    assertEquals("From: Ohje line: 225", false, ohje2.equals(ohje1)); 
    ohje1.setVaihe(12); 
    assertEquals("From: Ohje line: 228", true, ohje1.equals(ohje2)); 
    assertEquals("From: Ohje line: 229", true, ohje2.equals(ohje1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHashCode247 */
  @Test
  public void testHashCode247() {    // Ohje: 247
    Ohje ohje1 = new Ohje(); 
    Ohje ohje2 = new Ohje(); 
    assertEquals("From: Ohje line: 251", true, ohje1.hashCode() == ohje2.hashCode()); 
    ohje1.setOhjeistus("Vatkaa kananmunat"); 
    assertEquals("From: Ohje line: 254", false, ohje1.hashCode() == ohje2.hashCode()); 
    ohje2.setOhjeistus("Vatkaa kananmunat"); 
    assertEquals("From: Ohje line: 257", true, ohje1.hashCode() == ohje2.hashCode()); 
    ohje2.setVaihe(12); 
    assertEquals("From: Ohje line: 260", false, ohje1.hashCode() == ohje2.hashCode()); 
    ohje1.setVaihe(11); 
    assertEquals("From: Ohje line: 263", false, ohje1.hashCode() == ohje2.hashCode()); 
    ohje1.setVaihe(12); 
    assertEquals("From: Ohje line: 266", true, ohje1.hashCode() == ohje2.hashCode()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString280 */
  @Test
  public void testToString280() {    // Ohje: 280
    Ohje ohje = new Ohje(); 
    assertEquals("From: Ohje line: 282", "1|", ohje.toString()); 
    ohje = new Ohje("Lisää sokeri", 7); 
    assertEquals("From: Ohje line: 285", "7|Lisää sokeri", ohje.toString()); 
  } // Generated by ComTest END
}