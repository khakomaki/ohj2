package reseptihaku.test;
// Generated by ComTest BEGIN
import kanta.SailoException;
import static org.junit.Assert.*;
import org.junit.*;
import reseptihaku.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2024.02.21 14:41:45 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ReseptiTest {



  // Generated by ComTest BEGIN
  /** testResepti102 */
  @Test
  public void testResepti102() {    // Resepti: 102
    Resepti makaronilaatikko = new Resepti("Makaronilaatikko"); 
    assertEquals("From: Resepti line: 104", "-1|Makaronilaatikko|-1|-1|-1|-1", makaronilaatikko.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testResepti119 */
  @Test
  public void testResepti119() {    // Resepti: 119
    Resepti resepti = new Resepti(); 
    assertEquals("From: Resepti line: 121", "-1|Reseptin nimi|-1|-1|-1|-1", resepti.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetNimi246 */
  @Test
  public void testSetNimi246() {    // Resepti: 246
    Resepti pizza = new Resepti("Pizza"); 
    assertEquals("From: Resepti line: 248", "-1|Pizza|-1|-1|-1|-1", pizza.toString()); 
    pizza = new Resepti(""); 
    assertEquals("From: Resepti line: 251", "-1|Reseptin nimi|-1|-1|-1|-1", pizza.toString()); 
    pizza = new Resepti("Itsetehty pizza"); 
    assertEquals("From: Resepti line: 254", "-1|Itsetehty pizza|-1|-1|-1|-1", pizza.toString()); 
    pizza = new Resepti(null); 
    assertEquals("From: Resepti line: 257", "-1|Reseptin nimi|-1|-1|-1|-1", pizza.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetUusiNimi278 */
  @Test
  public void testSetUusiNimi278() {    // Resepti: 278
    Resepti pizza = new Resepti("Pizza"); 
    assertEquals("From: Resepti line: 280", "-1|Pizza|-1|-1|-1|-1", pizza.toString()); 
    pizza.setUusiNimi(""); 
    assertEquals("From: Resepti line: 283", "-1|Pizza|-1|-1|-1|-1", pizza.toString()); 
    pizza.setUusiNimi("Itsetehty pizza"); 
    assertEquals("From: Resepti line: 286", "-1|Itsetehty pizza|-1|-1|-1|-1", pizza.toString()); 
    pizza.setUusiNimi(null); 
    assertEquals("From: Resepti line: 289", "-1|Itsetehty pizza|-1|-1|-1|-1", pizza.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetNimi306 */
  @Test
  public void testGetNimi306() {    // Resepti: 306
    Resepti pizza = new Resepti("Margarita pizza"); 
    assertEquals("From: Resepti line: 308", true, pizza.getNimi().equals("Margarita pizza")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetKuvaus323 */
  @Test
  public void testSetKuvaus323() {    // Resepti: 323
    Resepti sampyla = new Resepti(); 
    assertEquals("From: Resepti line: 325", "", sampyla.getKuvaus()); 
    sampyla.setKuvaus("Parhaimmillaan uunituoreena."); 
    assertEquals("From: Resepti line: 328", "Parhaimmillaan uunituoreena.", sampyla.getKuvaus()); 
    sampyla.setKuvaus(null); 
    assertEquals("From: Resepti line: 331", "", sampyla.getKuvaus()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKuvaus351 */
  @Test
  public void testGetKuvaus351() {    // Resepti: 351
    Resepti sampyla = new Resepti(); 
    assertEquals("From: Resepti line: 353", "", sampyla.getKuvaus()); 
    sampyla.setKuvaus("Parhaimmillaan uunituoreena."); 
    assertEquals("From: Resepti line: 356", "Parhaimmillaan uunituoreena.", sampyla.getKuvaus()); 
    sampyla.setKuvaus(null); 
    assertEquals("From: Resepti line: 359", "", sampyla.getKuvaus()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTunnus373 */
  @Test
  public void testGetTunnus373() {    // Resepti: 373
    Resepti resepti = new Resepti(); 
    assertEquals("From: Resepti line: 375", -1, resepti.getTunnus()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetAlihakemistoPolku410 
   * @throws SailoException when error
   */
  @Test
  public void testGetAlihakemistoPolku410() throws SailoException {    // Resepti: 410
    Resepti resepti = new Resepti(); 
    assertEquals("From: Resepti line: 415", "reseptidata/Reseptin nimi/", resepti.getAlihakemistoPolku()); 
    resepti.setTiedostopolku("jälkiruokareseptit/"); 
    resepti.setUusiNimi("Suklaakakku"); 
    assertEquals("From: Resepti line: 419", "jälkiruokareseptit/Suklaakakku/", resepti.getAlihakemistoPolku()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetOsiot437 */
  @Test
  public void testGetOsiot437() {    // Resepti: 437
    Resepti resepti = new Resepti(); 
    assertEquals("From: Resepti line: 439", true, resepti.getOsiot().equals(new Osiot())); 
    resepti.lisaaOsio(new Osio("Pohja")); 
    resepti.lisaaOsio(new Osio("Täyte")); 
    assertEquals("From: Resepti line: 444", true, resepti.getOsiot().annaIndeksista(0).equals(new Osio("Pohja"))); 
    assertEquals("From: Resepti line: 445", true, resepti.getOsiot().annaIndeksista(1).equals(new Osio("Täyte"))); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaOsio460 */
  @Test
  public void testLisaaOsio460() {    // Resepti: 460
    Resepti resepti = new Resepti(); 
    assertEquals("From: Resepti line: 462", true, resepti.getOsiot().equals(new Osiot())); 
    resepti.lisaaOsio(new Osio("Pohja")); 
    resepti.lisaaOsio(new Osio("Täyte")); 
    assertEquals("From: Resepti line: 467", true, resepti.getOsiot().annaIndeksista(0).equals(new Osio("Pohja"))); 
    assertEquals("From: Resepti line: 468", true, resepti.getOsiot().annaIndeksista(1).equals(new Osio("Täyte"))); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetHinta492 */
  @Test
  public void testSetHinta492() {    // Resepti: 492
    Resepti mokkapalat = new Resepti("Mokkapalat"); 
    mokkapalat.setHinta(2); 
    assertEquals("From: Resepti line: 495", 2, mokkapalat.getHinta()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetHintaString555 */
  @Test
  public void testGetHintaString555() {    // Resepti: 555
    Resepti resepti = new Resepti(); 
    assertEquals("From: Resepti line: 557", "", resepti.getHintaString()); 
    resepti.setHinta(0); 
    assertEquals("From: Resepti line: 560", "", resepti.getHintaString()); 
    resepti.setHinta(1); 
    assertEquals("From: Resepti line: 563", "€", resepti.getHintaString()); 
    resepti.setHinta(2); 
    assertEquals("From: Resepti line: 566", "€€", resepti.getHintaString()); 
    resepti.setHinta(3); 
    assertEquals("From: Resepti line: 569", "€€€", resepti.getHintaString()); 
    resepti.setHinta(4); 
    assertEquals("From: Resepti line: 572", "€€€", resepti.getHintaString()); 
    resepti.setHinta(-1); 
    assertEquals("From: Resepti line: 575", "", resepti.getHintaString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTaulukkoMuodossa651 */
  @Test
  public void testGetTaulukkoMuodossa651() {    // Resepti: 651
    Resepti resepti = new Resepti("Kakku"); 
    assertEquals("From: Resepti line: 653", "Kakku||||", resepti.getTaulukkoMuodossa()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoNimessa680 */
  @Test
  public void testOnkoNimessa680() {    // Resepti: 680
    Resepti resepti = new Resepti("Juustokakku"); 
    assertEquals("From: Resepti line: 682", true, resepti.onkoNimessa("kakku")); 
    assertEquals("From: Resepti line: 683", true, resepti.onkoNimessa("KAKKU")); 
    assertEquals("From: Resepti line: 684", true, resepti.onkoNimessa("Juustokakku")); 
    assertEquals("From: Resepti line: 685", true, resepti.onkoNimessa("   kakku ")); 
    assertEquals("From: Resepti line: 686", false, resepti.onkoNimessa("Voileipäkakku")); 
    assertEquals("From: Resepti line: 687", false, resepti.onkoNimessa("juusto kakku")); 
    assertEquals("From: Resepti line: 688", true, resepti.onkoNimessa("")); 
    assertEquals("From: Resepti line: 689", true, resepti.onkoNimessa(null)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testClone893 */
  @Test
  public void testClone893() {    // Resepti: 893
    Resepti pizza = new Resepti("Pizza"); 
    pizza.setKuvaus("Itsetehdyllä tomaattikastikkeella."); 
    pizza.setHinta(3); 
    pizza.setVaativuus(4); 
    pizza.lisaaOsio(new Osio("Pizzapohja")); 
    pizza.lisaaOsio(new Osio("Tomaattikastike")); 
    assertEquals("From: Resepti line: 901", "-1|Pizza|3|-1|-1|4", pizza.toString()); 
    Resepti kopioPizza = pizza.clone(); 
    assertEquals("From: Resepti line: 904", "-1|Pizza|3|-1|-1|4", kopioPizza.toString()); 
    assertEquals("From: Resepti line: 906", "Pizzapohja", kopioPizza.getOsiot().annaIndeksista(0).getNimi()); 
    assertEquals("From: Resepti line: 907", "Tomaattikastike", kopioPizza.getOsiot().annaIndeksista(1).getNimi()); 
    pizza.setHinta(1); 
    assertEquals("From: Resepti line: 910", "-1|Pizza|1|-1|-1|4", pizza.toString()); 
    assertEquals("From: Resepti line: 911", "-1|Pizza|3|-1|-1|4", kopioPizza.toString()); 
    kopioPizza.setTahdet(1); 
    assertEquals("From: Resepti line: 914", "-1|Pizza|1|-1|-1|4", pizza.toString()); 
    assertEquals("From: Resepti line: 915", "-1|Pizza|3|-1|1|4", kopioPizza.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals944 */
  @Test
  public void testEquals944() {    // Resepti: 944
    Resepti pizza1 = new Resepti("Pizza"); 
    pizza1.setKuvaus("Pizzaa."); 
    pizza1.setHinta(1); 
    pizza1.setTahdet(2); 
    Resepti pizza2 = new Resepti("Pizza2"); 
    assertEquals("From: Resepti line: 951", false, pizza1.equals(pizza2)); 
    pizza2.setKuvaus("Pizzaa."); 
    pizza2.setHinta(1); 
    pizza2.setTahdet(2); 
    assertEquals("From: Resepti line: 956", false, pizza1.equals(pizza2)); 
    assertEquals("From: Resepti line: 957", false, pizza2.equals(pizza1)); 
    pizza2.setUusiNimi("Pizza"); 
    assertEquals("From: Resepti line: 960", true, pizza1.equals(pizza2)); 
    assertEquals("From: Resepti line: 961", true, pizza2.equals(pizza1)); 
    pizza1.setVaativuus(2); 
    assertEquals("From: Resepti line: 964", false, pizza1.equals(pizza2)); 
    pizza2.setVaativuus(2); 
    assertEquals("From: Resepti line: 967", true, pizza1.equals(pizza2)); 
    pizza2.lisaaOsio(new Osio("Pizzapohja")); 
    assertEquals("From: Resepti line: 970", false, pizza1.equals(pizza2)); 
    pizza1.lisaaOsio(new Osio("Pizzapohja")); 
    assertEquals("From: Resepti line: 973", true, pizza1.equals(pizza2)); 
    Resepti resepti1 = new Resepti(); 
    assertEquals("From: Resepti line: 976", true, resepti1.equals(new Resepti())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHashCode1002 */
  @Test
  public void testHashCode1002() {    // Resepti: 1002
    Resepti mustikkapiirakka = new Resepti("Mustikkapiirakka"); 
    Resepti piirakka = new Resepti("Piirakka"); 
    assertEquals("From: Resepti line: 1005", false, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    piirakka.setUusiNimi("Mustikkapiirakka"); 
    assertEquals("From: Resepti line: 1008", true, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    mustikkapiirakka.setHinta(2); 
    assertEquals("From: Resepti line: 1011", false, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    piirakka.setHinta(2); 
    assertEquals("From: Resepti line: 1014", true, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    mustikkapiirakka.setValmistusaika(2); 
    mustikkapiirakka.setTahdet(3); 
    mustikkapiirakka.setVaativuus(1); 
    assertEquals("From: Resepti line: 1019", false, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    piirakka.setValmistusaika(2); 
    piirakka.setTahdet(3); 
    piirakka.setVaativuus(1); 
    assertEquals("From: Resepti line: 1024", true, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    mustikkapiirakka.lisaaOsio(new Osio("Muropohja")); 
    assertEquals("From: Resepti line: 1027", false, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
    piirakka.lisaaOsio(new Osio("Muropohja")); 
    assertEquals("From: Resepti line: 1030", true, mustikkapiirakka.hashCode() == piirakka.hashCode()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLuoMustikkapiirakka1047 */
  @Test
  public void testLuoMustikkapiirakka1047() {    // Resepti: 1047
    Resepti mustikkapiirakka = new Resepti(""); 
    mustikkapiirakka.luoMustikkapiirakka(); 
    assertEquals("From: Resepti line: 1050", "-1|Mustikkapiirakka|2|2|3|1", mustikkapiirakka.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString1083 */
  @Test
  public void testToString1083() {    // Resepti: 1083
    Resepti lihapiirakka = new Resepti("Lihapiirakka"); 
    assertEquals("From: Resepti line: 1085", "-1|Lihapiirakka|-1|-1|-1|-1", lihapiirakka.toString()); 
  } // Generated by ComTest END
}