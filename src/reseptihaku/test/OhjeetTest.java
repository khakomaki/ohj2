package reseptihaku.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import reseptihaku.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2024.02.21 14:41:12 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class OhjeetTest {



  // Generated by ComTest BEGIN
  /** testOhjeet40 */
  @Test
  public void testOhjeet40() {    // Ohjeet: 40
    Ohjeet ohjeet = new Ohjeet(); 
    assertEquals("From: Ohjeet line: 42", "ohjeet.dat|-1|0", ohjeet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOhjeet56 */
  @Test
  public void testOhjeet56() {    // Ohjeet: 56
    Ohjeet ohjeet = new Ohjeet(1); 
    assertEquals("From: Ohjeet line: 58", "ohjeet.dat|1|0", ohjeet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa82 */
  @Test
  public void testLisaa82() {    // Ohjeet: 82
    Ohjeet ohjeet = new Ohjeet(15); 
    assertEquals("From: Ohjeet line: 84", "ohjeet.dat|15|0", ohjeet.toString()); 
    Ohje ohje1 = new Ohje("ensimmäinen", 100); 
    assertEquals("From: Ohjeet line: 87", 100, ohje1.getVaihe()); 
    ohjeet.lisaa(ohje1); 
    assertEquals("From: Ohjeet line: 89", 1, ohje1.getVaihe()); 
    assertEquals("From: Ohjeet line: 90", "ohjeet.dat|15|1", ohjeet.toString()); 
    Ohje ohje2 = new Ohje("toinen", 75); 
    assertEquals("From: Ohjeet line: 93", 75, ohje2.getVaihe()); 
    ohjeet.lisaa(ohje2); 
    assertEquals("From: Ohjeet line: 95", 2, ohje2.getVaihe()); 
    ohjeet.lisaa(new Ohje()); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 99", "ohjeet.dat|15|4", ohjeet.toString()); 
    ohjeet.lisaa(null); 
    assertEquals("From: Ohjeet line: 102", "ohjeet.dat|15|5", ohjeet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista135 */
  @Test
  public void testPoista135() {    // Ohjeet: 135
    Ohjeet ohjeet = new Ohjeet(2); 
    assertEquals("From: Ohjeet line: 137", "ohjeet.dat|2|0", ohjeet.toString()); 
    ohjeet.poista(-2); 
    ohjeet.poista(0); 
    ohjeet.poista(100); 
    assertEquals("From: Ohjeet line: 142", "ohjeet.dat|2|0", ohjeet.toString()); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 145", "ohjeet.dat|2|1", ohjeet.toString()); 
    ohjeet.poista(0); 
    assertEquals("From: Ohjeet line: 148", "ohjeet.dat|2|0", ohjeet.toString()); 
    ohjeet.lisaa(new Ohje("ohje 1")); 
    ohjeet.lisaa(new Ohje("ohje 2")); 
    ohjeet.lisaa(new Ohje("ohje 3")); 
    assertEquals("From: Ohjeet line: 153", "ohje 2", ohjeet.anna(1).getOhjeistus()); 
    ohjeet.poista(1); 
    assertEquals("From: Ohjeet line: 156", "ohje 3", ohjeet.anna(1).getOhjeistus()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista175 */
  @Test
  public void testPoista175() {    // Ohjeet: 175
    Ohjeet ohjeet = new Ohjeet(); 
    Ohje ohje1 = new Ohje("ohje 1"); ohjeet.lisaa(ohje1); 
    Ohje ohje2 = new Ohje("ohje 2"); ohjeet.lisaa(ohje2); 
    Ohje ohje3 = new Ohje("ohje 3"); ohjeet.lisaa(ohje3); 
    Ohje ohje4 = new Ohje("ohje 4"); ohjeet.lisaa(ohje4); 
    Ohje ohje5 = new Ohje("ohje 5"); ohjeet.lisaa(ohje5); 
    assertEquals("From: Ohjeet line: 182", "ohjeet.dat|-1|5", ohjeet.toString()); 
    assertEquals("From: Ohjeet line: 184", true, ohjeet.anna(1).equals(ohje2)); 
    assertEquals("From: Ohjeet line: 185", 2, ohje2.getVaihe()); 
    ohjeet.poista(ohje2); 
    assertEquals("From: Ohjeet line: 188", "ohjeet.dat|-1|4", ohjeet.toString()); 
    assertEquals("From: Ohjeet line: 189", false, ohjeet.anna(1).equals(ohje2)); 
    ohjeet.poista(new Ohje("ohje 5")); 
    assertEquals("From: Ohjeet line: 192", "ohjeet.dat|-1|4", ohjeet.toString()); 
    ohjeet.poista(new Ohje("ohje 5", 4)); 
    assertEquals("From: Ohjeet line: 195", "ohjeet.dat|-1|3", ohjeet.toString()); 
    ohjeet.poista(ohje2); 
    assertEquals("From: Ohjeet line: 198", "ohjeet.dat|-1|3", ohjeet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna220 */
  @Test
  public void testAnna220() {    // Ohjeet: 220
    Ohjeet ohjeet = new Ohjeet(1); 
    assertEquals("From: Ohjeet line: 222", null, ohjeet.anna(0)); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 225", false, ohjeet.anna(0) == null); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTiedostoNimi250 */
  @Test
  public void testSetTiedostoNimi250() {    // Ohjeet: 250
    Ohjeet ohjeet = new Ohjeet(); 
    assertEquals("From: Ohjeet line: 252", "ohjeet.dat|-1|0", ohjeet.toString()); 
    ohjeet.setTiedostoNimi("ohjeistukset.txt"); 
    assertEquals("From: Ohjeet line: 255", "ohjeistukset.txt|-1|0", ohjeet.toString()); 
    ohjeet.setTiedostoNimi(""); 
    assertEquals("From: Ohjeet line: 258", "ohjeistukset.txt|-1|0", ohjeet.toString()); 
    ohjeet.setTiedostoNimi(null); 
    assertEquals("From: Ohjeet line: 261", "ohjeistukset.txt|-1|0", ohjeet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTiedostonimi278 */
  @Test
  public void testGetTiedostonimi278() {    // Ohjeet: 278
    Ohjeet ohjeet = new Ohjeet(); 
    assertEquals("From: Ohjeet line: 280", "ohjeet.dat", ohjeet.getTiedostonimi()); 
    ohjeet.setTiedostoNimi("uudet_ohjeet.txt"); 
    assertEquals("From: Ohjeet line: 283", "uudet_ohjeet.txt", ohjeet.getTiedostonimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLkm397 */
  @Test
  public void testGetLkm397() {    // Ohjeet: 397
    Ohjeet ohjeet = new Ohjeet(); 
    assertEquals("From: Ohjeet line: 400", 0, ohjeet.getLkm()); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 403", 1, ohjeet.getLkm()); 
    ohjeet.lisaa(new Ohje()); 
    ohjeet.lisaa(new Ohje()); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 408", 4, ohjeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPaivitaVaiheet421 */
  @Test
  public void testPaivitaVaiheet421() {    // Ohjeet: 421
    Ohjeet ohjeet = new Ohjeet(); 
    ohjeet.lisaa(new Ohje()); 
    ohjeet.lisaa(new Ohje()); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 427", 1, ohjeet.anna(0).getVaihe()); 
    assertEquals("From: Ohjeet line: 428", 2, ohjeet.anna(1).getVaihe()); 
    assertEquals("From: Ohjeet line: 429", 3, ohjeet.anna(2).getVaihe()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testClone460 */
  @Test
  public void testClone460() {    // Ohjeet: 460
    Ohjeet ohjeet = new Ohjeet(2); 
    ohjeet.setTiedostoNimi("mustikkapiirakka.txt"); 
    ohjeet.lisaa(new Ohje("Sekoita sokeri ja vehnäjauhot")); 
    ohjeet.lisaa(new Ohje("Lisää kananmuna")); 
    assertEquals("From: Ohjeet line: 465", "mustikkapiirakka.txt|2|2", ohjeet.toString()); 
    Ohjeet kopioOhjeet = ohjeet.clone(); 
    assertEquals("From: Ohjeet line: 468", "mustikkapiirakka.txt|2|2", kopioOhjeet.toString()); 
    assertEquals("From: Ohjeet line: 469", "Sekoita sokeri ja vehnäjauhot", kopioOhjeet.anna(0).getOhjeistus()); 
    assertEquals("From: Ohjeet line: 470", "Lisää kananmuna", kopioOhjeet.anna(1).getOhjeistus()); 
    ohjeet.anna(1).setOhjeistus("Lisää vanilliinisokeri"); 
    assertEquals("From: Ohjeet line: 473", "Lisää vanilliinisokeri", ohjeet.anna(1).getOhjeistus()); 
    assertEquals("From: Ohjeet line: 474", "Lisää kananmuna", kopioOhjeet.anna(1).getOhjeistus()); 
    ohjeet.lisaa(new Ohje()); 
    ohjeet.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 478", "mustikkapiirakka.txt|2|4", ohjeet.toString()); 
    assertEquals("From: Ohjeet line: 479", "mustikkapiirakka.txt|2|2", kopioOhjeet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals499 */
  @Test
  public void testEquals499() {    // Ohjeet: 499
    Ohjeet ohjeet1 = new Ohjeet(); 
    Ohjeet ohjeet2 = new Ohjeet(); 
    assertEquals("From: Ohjeet line: 502", true, ohjeet1.equals(ohjeet2)); 
    ohjeet1.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 505", false, ohjeet1.equals(ohjeet2)); 
    ohjeet2.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 508", true, ohjeet1.equals(ohjeet2)); 
    Ohje sokeri = new Ohje("Lisää sokeri"); 
    Ohje kananmuna = new Ohje("Lisää kananmuna"); 
    ohjeet2.lisaa(sokeri); 
    assertEquals("From: Ohjeet line: 514", false, ohjeet1.equals(ohjeet2)); 
    ohjeet1.lisaa(kananmuna); 
    assertEquals("From: Ohjeet line: 517", false, ohjeet1.equals(ohjeet2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHashCode540 */
  @Test
  public void testHashCode540() {    // Ohjeet: 540
    Ohjeet ohjeet1 = new Ohjeet(); 
    Ohjeet ohjeet2 = new Ohjeet(); 
    assertEquals("From: Ohjeet line: 543", true, ohjeet1.hashCode() == ohjeet2.hashCode()); 
    ohjeet1.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 546", false, ohjeet1.hashCode() == ohjeet2.hashCode()); 
    ohjeet2.lisaa(new Ohje()); 
    assertEquals("From: Ohjeet line: 549", true, ohjeet1.hashCode() == ohjeet2.hashCode()); 
    Ohje sokeri = new Ohje("Lisää sokeri"); 
    Ohje kananmuna = new Ohje("Lisää kananmuna"); 
    ohjeet2.lisaa(sokeri); 
    assertEquals("From: Ohjeet line: 555", false, ohjeet1.hashCode() == ohjeet2.hashCode()); 
    ohjeet1.lisaa(kananmuna); 
    assertEquals("From: Ohjeet line: 558", false, ohjeet1.hashCode() == ohjeet2.hashCode()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString579 */
  @Test
  public void testToString579() {    // Ohjeet: 579
    Ohjeet ohjeet = new Ohjeet(1); 
    assertEquals("From: Ohjeet line: 581", "ohjeet.dat|1|0", ohjeet.toString()); 
  } // Generated by ComTest END
}